import*as e from"react";import{useState as n,useRef as t,useCallback as o,useEffect as r,useLayoutEffect as i}from"react";import{flushSync as l}from"react-dom";import a from"tiny-warning";function u(){return u=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e},u.apply(this,arguments)}function c(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n.indexOf(t=i[o])>=0||(r[t]=e[t]);return r}var d=function(){};function s(e){return null!=e&&e.current?e.current.scrollHeight:(a(!0,"useCollapse was not able to find a ref to the collapse element via `getCollapseProps`. Ensure that the element exposes its `ref` prop. If it exposes the ref prop under a different name (like `innerRef`), use the `refKey` property to change it. Example:\n\n{...getCollapseProps({refKey: 'innerRef'})}"),"auto")}var f=function(){var e=arguments;return function(){var n=arguments;return[].slice.call(e).forEach(function(e){return e&&e.apply(void 0,[].slice.call(n))})}};function p(e,n){if(null!=e)if("function"==typeof e)e(n);else try{e.current=n}catch(t){throw new Error('Cannot assign value "'+n+'" to ref "'+e+'"')}}var h="undefined"!=typeof window?i:r,v=!1,g=0,m=function(){return++g},x=e.useId,y=["duration","easing","collapseStyles","expandStyles","onExpandStart","onExpandEnd","onCollapseStart","onCollapseEnd","isExpanded","defaultExpanded","hasDisabledAnimation"],E=["disabled","onClick"],b=["style","onTransitionEnd","refKey"];function C(e){var i,g,C=void 0===e?{}:e,w=C.duration,S=C.easing,k=void 0===S?"cubic-bezier(0.4, 0, 0.2, 1)":S,A=C.collapseStyles,O=void 0===A?{}:A,P=C.expandStyles,T=void 0===P?{}:P,q=C.onExpandStart,D=void 0===q?d:q,F=C.onExpandEnd,K=void 0===F?d:F,j=C.onCollapseStart,I=void 0===j?d:j,N=C.onCollapseEnd,z=void 0===N?d:N,H=C.isExpanded,M=C.defaultExpanded,R=void 0!==M&&M,B=C.hasDisabledAnimation,V=void 0!==B&&B,_=c(C,y),G=function(e,i){var l=n(i||!1),u=l[0],c=l[1],d=t(null!=e),s=d.current?e:u,f=o(function(e){d.current||c(e)},[]);return r(function(){a(!(d.current&&null==e),"useCollapse is changing from controlled to uncontrolled. useCollapse should not switch from controlled to uncontrolled (or vice versa). Decide between using a controlled or uncontrolled collapse for the lifetime of the component. Check the `isExpanded` prop."),a(!(!d.current&&null!=e),"useCollapse is changing from uncontrolled to controlled. useCollapse should not switch from uncontrolled to controlled (or vice versa). Decide between using a controlled or uncontrolled collapse for the lifetime of the component. Check the `isExpanded` prop.")},[e]),[s,f]}(H,R),J=G[0],L=G[1],Q=void 0!==x?x():function(e){var t=v?m():null,o=n(t),i=o[0],l=o[1];return h(function(){null===i&&l(m())},[]),r(function(){!1===v&&(v=!0)},[]),null!=i?String(i):void 0}(),U=t(null);i=U,g=function(e){},"production"!==process.env.NODE_ENV&&(g=function(e){if(null!=e&&e.current){var n=window.getComputedStyle(e.current),t=n.paddingTop,o=n.paddingBottom;a(!(t&&"0px"!==t||o&&"0px"!==o),"react-collapsed: Padding applied to the collapse element will cause the animation to break and not perform as expected. To fix, apply equivalent padding to the direct descendent of the collapse element.")}}),r(function(){g(i)},[i]);var W,X,Y,Z=(_.collapsedHeight||0)+"px",$={display:"0px"===Z?"none":"block",height:Z,overflow:"hidden"},ee=n(J?{}:$),ne=ee[0],te=ee[1],oe=function(e){l(function(){te(e)})},re=function(e){oe(function(n){return u({},n,e)})};function ie(e){if(V)return{};var n=w||function(e){if(!e||"string"==typeof e)return 0;var n=e/36;return Math.round(10*(4+15*Math.pow(n,.25)+n/5))}(e);return{transition:"height "+n+"ms "+k}}W=function(){J?requestAnimationFrame(function(){D(),re(u({},T,{willChange:"height",display:"block",overflow:"hidden"})),requestAnimationFrame(function(){var e=s(U);re(u({},ie(e),{height:e}))})}):requestAnimationFrame(function(){I();var e=s(U);re(u({},O,ie(e),{willChange:"height",height:e})),requestAnimationFrame(function(){re({height:Z,overflow:"hidden"})})})},X=[J,Z],Y=t(!0),r(function(){if(!Y.current)return W();Y.current=!1},X);var le=function(e){if(e.target===U.current&&"height"===e.propertyName)if(J){var n=s(U);n===ne.height?oe({}):re({height:n}),K()}else ne.height===Z&&(oe($),z())};return{getToggleProps:function(e){var n=void 0===e?{}:e,t=n.disabled,o=void 0!==t&&t,r=n.onClick,i=void 0===r?d:r,l=c(n,E);return u({type:"button",role:"button",id:"react-collapsed-toggle-"+Q,"aria-controls":"react-collapsed-panel-"+Q,"aria-expanded":J,tabIndex:0,disabled:o},l,{onClick:o?d:f(i,function(){return L(function(e){return!e})})})},getCollapseProps:function(e){var n,t=void 0===e?{}:e,o=t.style,r=void 0===o?{}:o,i=t.onTransitionEnd,l=void 0===i?d:i,a=t.refKey,s=void 0===a?"ref":a,h=c(t,b);return u({id:"react-collapsed-panel-"+Q,"aria-hidden":!J},h,((n={})[s]=function(){var e=[].slice.call(arguments);return e.every(function(e){return null==e})?null:function(n){e.forEach(function(e){p(e,n)})}}(U,h[s]),n.onTransitionEnd=f(le,l),n.style=u({boxSizing:"border-box"},r,ne),n))},isExpanded:J,setExpanded:L}}export{C as default};
//# sourceMappingURL=react-collapsed.esm.js.map
